import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.cluster import DBSCAN
x1,y1=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0,0]], cluster_std=[[0.15]])
x2,y2=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0.8,0.8]], cluster_std=[[0.15]])
x3,y3=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0.8,0]], cluster_std=[[0.15]])
x4,y4=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0,0.8]], cluster_std=[[0.15]])              
X = np.concatenate((x1,x2,x3,x4))
y_pred = DBSCAN(eps = 0.055,min_samples = 5).fit_predict(X)
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.show()
x1,y1=datasets.make_blobs(n_samples=8000, n_features=2, centers=[[0,0]], cluster_std=[[0.13]])
x2,y2=datasets.make_blobs(n_samples=900, n_features=2, centers=[[0.8,0.8]], cluster_std=[[0.15]])
x3,y3=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0.8,0]], cluster_std=[[0.17]])
x4,y4=datasets.make_blobs(n_samples=700, n_features=2, centers=[[0,0.8]], cluster_std=[[0.11]])              
X = np.concatenate((x1,x2,x3,x4))
y_pred = DBSCAN(eps = 0.038,min_samples = 7).fit_predict(X)
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.show()
x1,y1=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0,0]], cluster_std=[[0.15]])
x2,y2=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0.6,0.6]], cluster_std=[[0.15]])
x3,y3=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0.6,0]], cluster_std=[[0.15]])
x4,y4=datasets.make_blobs(n_samples=1000, n_features=2, centers=[[0,0.6]], cluster_std=[[0.15]])              
X = np.concatenate((x1,x2,x3,x4))
y_pred = DBSCAN(eps = 0.02255,min_samples = 4).fit_predict(X)
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.show()
X,y = datasets.make_moons(n_samples=1000, shuffle=True, noise=0.05, random_state=None)
y_pred = DBSCAN(eps = 0.1,min_samples = 5).fit_predict(X)
plt.scatter(X[:, 0], X[:, 1], c=y_pred)
plt.show()